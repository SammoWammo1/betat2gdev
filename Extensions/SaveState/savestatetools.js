var gdjs;(function(s){const D=new s.Logger("Save state");let J;(function(e){e.getIndexedDbDatabaseName=()=>`gdevelop-game-${s.projectData.properties.projectUuid}`,e.getIndexedDbObjectStore=()=>"game-saves",e.getIndexedDbStorageKey=a=>`save-${a}`;const k={syncObjectIdentifiers:!0,syncAllVariables:!0,syncAllBehaviors:!0,syncSceneTimers:!0,syncOnceTriggers:!0,syncSounds:!0,syncTweens:!0,syncLayers:!0,syncAsyncTasks:!0,syncSceneVisualProps:!0,syncFullTileMaps:!0},m={clearSceneStack:!0,preventInitialInstancesCreation:!0,preventSoundsStoppingOnStartup:!0,clearInputs:!0,keepControl:!0,ignoreVariableOwnership:!0};let f=null,w=null,N=!1,V=!1,I=!1,x=!1,h=null;e.getSecondsSinceLastSave=()=>f?Math.floor((Date.now()-f)/1e3):-1,e.getSecondsSinceLastLoad=()=>w?Math.floor((Date.now()-w)/1e3):-1,e.hasSaveJustSucceeded=()=>N,e.hasLoadJustSucceeded=()=>I,e.hasSaveJustFailed=()=>V,e.hasLoadJustFailed=()=>x,e.markSaveJustSucceeded=()=>{N=!0,f=Date.now()},e.markLoadJustSucceeded=()=>{I=!0,w=Date.now()},e.markSaveJustFailed=()=>{V=!0},e.markLoadJustFailed=()=>{x=!0},s.registerRuntimeScenePostEventsCallback(()=>{N=!1,V=!1,I=!1,x=!1}),s.registerRuntimeScenePostEventsCallback(a=>{A(a)});const P=a=>{const t={gameNetworkSyncData:{},layoutNetworkSyncDatas:[]},n=a.getGame().getNetworkSyncData(k),l=a.getGame().getSceneStack().getAllScenes();return t.gameNetworkSyncData=n||{},l.forEach((b,c)=>{t.layoutNetworkSyncDatas[c]={sceneData:{},objectDatas:{}};const g=b.getAdhocListOfAllInstances();for(const S in g)if(g.hasOwnProperty(S)){const i=g[S],o=i.getNetworkSyncData(k);t.layoutNetworkSyncDatas[c].objectDatas[i.id]=o}const r=b.getNetworkSyncData(k)||[];t.layoutNetworkSyncDatas[c].sceneData=r}),t};e.saveVariableGameSnapshot=async function(a,t){try{const n=P(a);t.fromJSObject(n),e.markSaveJustSucceeded()}catch(n){D.error("Error saving to variable:",n),e.markSaveJustFailed()}},e.saveStorageGameSnapshot=async function(a,t){try{const n=P(a);await s.indexedDb.saveToIndexedDB(e.getIndexedDbDatabaseName(),e.getIndexedDbObjectStore(),e.getIndexedDbStorageKey(t),n),e.markSaveJustSucceeded()}catch(n){D.error("Error saving to IndexedDB:",n),e.markSaveJustFailed()}},e.loadGameFromVariableSnapshot=async function(a){h={loadVariable:a}},e.loadGameFromStorageSnapshot=async function(a){h={loadStorageName:a}};const A=function(a){if(!h)return;const t=h;if(h=null,t.loadVariable){const l=a.getVariables().getVariablePathInContainerByLoopingThroughAllVariables(t.loadVariable),c=a.getGame().getVariables().getVariablePathInContainerByLoopingThroughAllVariables(t.loadVariable),g=t.loadVariable.toJSObject();try{R(a,g,{variableToRehydrate:t.loadVariable,variablePathInScene:l,variablePathInGame:c}),e.markLoadJustSucceeded()}catch(r){D.error("Error loading from variable:",r),e.markLoadJustFailed()}}else t.loadStorageName&&s.indexedDb.loadFromIndexedDB(e.getIndexedDbDatabaseName(),e.getIndexedDbObjectStore(),e.getIndexedDbStorageKey(t.loadStorageName)).then(n=>{R(a,n),e.markLoadJustSucceeded()}).catch(n=>{D.error("Error loading from IndexedDB:",n),e.markLoadJustFailed()})},R=(a,t,n)=>{const l=n?n.variableToRehydrate.getNetworkSyncData(k):null,b=a.getGame();b.updateFromNetworkSyncData(t.gameNetworkSyncData,m);const c=b.getSceneStack();if(c.applyUpdateFromNetworkSyncDataIfAny(m),c.getAllScenes().forEach((r,S)=>{const i=t.layoutNetworkSyncDatas[S];if(!i)return;const o=i.objectDatas;for(const d in o){const y=o[d],u=y.n;if(!u){D.warn("Tried to recreate an object without a name.");continue}const p=r.createObject(u);p&&p.updateFromNetworkSyncData(y,m)}r.updateFromNetworkSyncData(i.sceneData,m)}),n&&l){const r=c.getCurrentScene();if(!r)return;const S=r.getVariables(),i=r.getGame().getVariables(),{variablePathInScene:o,variablePathInGame:d}=n;if(o&&o.length>0){const y=o[o.length-1],u=S.getVariableFromPath(o);if(u){const p={name:y,...l};u.updateFromNetworkSyncData(p,m)}}if(d&&d.length>0){const y=d[d.length-1],u=i.getVariableFromPath(d);if(u){const p={name:y,...l};u.updateFromNetworkSyncData(p,m)}}}}})(J=s.saveState||(s.saveState={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=savestatetools.js.map
