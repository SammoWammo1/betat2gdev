var gdjs;(function(l){const p=new l.Logger("Save State"),F=new l.Logger("Save State - Debug");l.Logger.getDefaultConsoleLoggerOutput().discardGroup("Save State - Debug");let U;(function(n){n.getIndexedDbDatabaseName=()=>`gdevelop-game-${l.projectData.properties.projectUuid}`,n.getIndexedDbObjectStore=()=>"game-saves",n.getIndexedDbStorageKey=e=>`save-${e}`;const L=new WeakMap,N=new WeakMap,I=new WeakMap;n.setVariableSaveConfiguration=(e,t,r,a)=>{L.set(t,{defaultProfilePersistence:r?"Persisted":"DoNotSave",persistedInProfiles:new Set(k(a))})},n.setSceneDataSaveConfiguration=(e,t,r,a)=>{const o=N.get(e.getGame())||{};N.set(e.getGame(),{...o,[t]:{defaultProfilePersistence:r?"Persisted":"DoNotSave",persistedInProfiles:new Set(k(a))}})},n.setGameDataSaveConfiguration=(e,t,r)=>{I.set(e.getGame(),{defaultProfilePersistence:t?"Persisted":"DoNotSave",persistedInProfiles:new Set(k(r))})};const b=(e,t)=>{if(e.includes("default")&&(!t||t.defaultProfilePersistence==="Persisted"))return!0;if(t){for(const r of e)if(t.persistedInProfiles.has(r))return!0}return!1},_=e=>t=>{const r=L.get(t);return!b(e,r||null)};let j=null,R=null,x=!1,h=!1,O=!1,v=!1,D=null;n.getSecondsSinceLastSave=e=>j?Math.floor((Date.now()-j)/1e3):-1,n.getSecondsSinceLastLoad=e=>R?Math.floor((Date.now()-R)/1e3):-1,n.hasSaveJustSucceeded=e=>x,n.hasLoadJustSucceeded=e=>O,n.hasSaveJustFailed=e=>h,n.hasLoadJustFailed=e=>v,n.markSaveJustSucceeded=e=>{x=!0,j=Date.now()},n.markLoadJustSucceeded=e=>{O=!0,R=Date.now()},n.markSaveJustFailed=e=>{h=!0},n.markLoadJustFailed=e=>{v=!0},l.registerRuntimeScenePostEventsCallback(()=>{x=!1,h=!1,O=!1,v=!1}),l.registerRuntimeScenePostEventsCallback(e=>{q(e)}),n.createGameSaveState=(e,t)=>{const{profileNames:r}=t,a={syncObjectIdentifiers:!0,shouldExcludeVariableFromData:_(r),syncAllBehaviors:!0,syncGameVariables:!0,syncSceneTimers:!0,syncOnceTriggers:!0,syncSounds:!0,syncTweens:!0,syncLayers:!0,syncAsyncTasks:!0,syncSceneVisualProps:!0,syncFullTileMaps:!0},o=b(t.profileNames,I.get(e)),s={gameNetworkSyncData:e.getNetworkSyncData({...a,syncGameVariables:o,syncSounds:o}),layoutNetworkSyncDatas:[]};return e.getSceneStack().getAllScenes().forEach((c,i)=>{s.layoutNetworkSyncDatas[i]={sceneData:{},objectDatas:{}};for(const d of c.getAdhocListOfAllInstances()){let S=r.includes("default");for(const f of d._behaviors)f instanceof l.SaveConfigurationRuntimeBehavior&&(r.includes("default")&&f.getDefaultProfilePersistence()==="Persisted"||r.some(y=>f.getPersistedInProfiles().split(",").map(g=>g.trim()).includes(y))?S=!0:S=!1);if(S){const f=d.getNetworkSyncData(a);s.layoutNetworkSyncDatas[i].objectDatas[d.id]=f}}if(b(t.profileNames,(N.get(e)||{})[c.getName()])){const d=c.getNetworkSyncData(a);d&&(s.layoutNetworkSyncDatas[i].sceneData=d)}}),s},n.createGameSaveStateInVariable=async function(e,t,r){try{const a=n.createGameSaveState(e.getGame(),{profileNames:w(r)});t.fromJSObject(a),n.markSaveJustSucceeded(e)}catch(a){p.error("Error saving to variable:",a),n.markSaveJustFailed(e)}},n.createGameSaveStateInStorage=async function(e,t,r){try{const a=n.createGameSaveState(e.getGame(),{profileNames:w(r)});await l.indexedDb.saveToIndexedDB(n.getIndexedDbDatabaseName(),n.getIndexedDbObjectStore(),n.getIndexedDbStorageKey(t),a),n.markSaveJustSucceeded(e)}catch(a){p.error("Error saving to IndexedDB:",a),n.markSaveJustFailed(e)}};const q=function(e){const t=e.getGame();if(!D)return;const{fromVariable:r,fromStorageName:a,profileNames:o,clearSceneStack:s}=D;if(D=null,r){const u=r.toJSObject();try{n.restoreGameSaveState(t,u,{profileNames:o,clearSceneStack:s}),n.markLoadJustSucceeded(e)}catch(c){p.error("Error loading from variable:",c),n.markLoadJustFailed(e)}}else a&&l.indexedDb.loadFromIndexedDB(n.getIndexedDbDatabaseName(),n.getIndexedDbObjectStore(),n.getIndexedDbStorageKey(a)).then(u=>{const c=u;n.restoreGameSaveState(t,c,{profileNames:o,clearSceneStack:s}),n.markLoadJustSucceeded(e)}).catch(u=>{p.error("Error loading from IndexedDB:",u),n.markLoadJustFailed(e)})},K=({runtimeScene:e,objectName:t,networkId:r})=>{const a=e.getInstancesOf(t);if(!a)return null;let o=a.find(u=>u.networkId===r)||null;if(o)return F.info(`Found instance ${r}, will use it for restoring.`),o;F.info(`Instance ${r} not found, creating instance ${t}.`);const s=e.createObject(t);return s?(s.networkId=r,s):null};n.restoreGameSaveState=(e,t,r)=>{const a=c=>{const i=[];return c._objects.values(i),z(i,r.profileNames)},o={clearSceneStack:r.clearSceneStack===void 0?!0:r.clearSceneStack,getExcludedObjectNames:a,preventSoundsStoppingOnStartup:!0,clearInputs:!0,keepControl:!0,ignoreVariableOwnership:!0,shouldExcludeVariableFromUpdate:_(r.profileNames)};if(t.gameNetworkSyncData){const c=b(r.profileNames,I.get(e));e.updateFromNetworkSyncData(c?t.gameNetworkSyncData:{ss:t.gameNetworkSyncData.ss},o)}const s=e.getSceneStack();s.applyUpdateFromNetworkSyncDataIfAny(o),s.getAllScenes().forEach((c,i)=>{const P=t.layoutNetworkSyncDatas[i];if(!P)return;const d=a(c),S=new Set,f=P.objectDatas;for(const y in f){const g=f[y],m=g.n;if(!m){p.warn("Tried to recreate an object without a name.");continue}if(!d.has(m))continue;const W=g.networkId||"";S.add(W);const $=K({runtimeScene:c,objectName:m,networkId:W});$&&$.updateFromNetworkSyncData(g,o)}for(const y of d){const g=[...c.getInstancesOf(y)];for(const m of g)(!m.networkId||!S.has(m.networkId))&&m.deleteFromScene()}b(r.profileNames,(N.get(e)||{})[c.getName()])&&c.updateFromNetworkSyncData(P.sceneData,o)})};const k=e=>e?e.split(",").map(t=>t.trim()):null,w=e=>k(e)||["default"];n.restoreGameSaveStateFromVariable=async function(e,t,r,a){D={fromVariable:t,profileNames:w(r),clearSceneStack:a}},n.restoreGameSaveStateFromStorage=async function(e,t,r,a){D={fromStorageName:t,profileNames:w(r),clearSceneStack:a}};const z=(e,t)=>{const r=new Set;for(const a of e){let o=t.includes("default");for(const s of a.behaviors){if(s.type!=="SaveState::SaveConfiguration")continue;const u=s.defaultProfilePersistence==="Persisted"?"Persisted":"DoNotSave",c=typeof s.persistedInProfiles=="string"?s.persistedInProfiles.split(",").map(i=>i.trim()):[];o=!1,(t.includes("default")&&u==="Persisted"||t.some(i=>c.includes(i)))&&(o=!0)}o&&r.add(a.name)}return r}})(U=l.saveState||(l.saveState={}))})(gdjs||(gdjs={}));
//# sourceMappingURL=SaveStateTools.js.map
